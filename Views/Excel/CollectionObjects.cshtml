@using Syncfusion.EJ2

@section ActionDescription{
    This sample demonstrates how to use Collection Objects in spreadsheets using Excel (XlsIO) Library.
}
@section Meta{
                    <meta name="description" content="This example demonstrates the Collection Objects in ASP.NET MVC Excel (XlsIO) library. Explore here for more details."/>
                }
@section Description{
    Essential XlsIO allows you to import/export data from/to Collection Objects. Collection object usually holds a set of instance variables or properties, also known as attributes.
    <br />
    <br />This sample demonstrates the usage of Collection objects using Essential XlsIO.
    <br />
}
@section ControlsSection{
    <div class="control-section">
        @{Html.BeginForm("collectionobjects", "excel", FormMethod.Post);
        { 
        <div class="rowdiv">
            <p style="font-weight:normal">
                Click the "Import From Excel" button to import data from nested class into the ListView. 
            </p>
			<p style="font-weight:normal">
                Click the "Export To Excel" button to view the Excel document created by exporting the nested class data from the ListView using Essential XlsIO. 
                Please note that the Microsoft Excel viewer or Microsoft Excel is required to view the Excel document.
            </p>
            @Html.EJS().Grid("Export").AllowPaging(true).DataSource((IEnumerable<object>)ViewData["DataSource"]).Columns(col =>
       {
           col.Field("ID").HeaderText("ID").IsPrimaryKey(true).Visible(false).TextAlign(Syncfusion.EJ2.Grids.TextAlign.Left).Width("40").Add();
           col.Field("BrandName").HeaderText("Brand").Width("70").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Left).Add();
           col.Field("VehicleType.VehicleName").HeaderText("Vehicle Type").Width("70").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Left).Add();
           col.Field("VehicleType.Model.ModelName").HeaderText("Model").Width("70").TextAlign(Syncfusion.EJ2.Grids.TextAlign.Left).Add();
       }).Width("550").Height("250").Render()

            <div class="rowdiv">
                <div class="celldiv">
                    <div>
						Save As :
						<input type="radio" id="XLS" name="SaveOption" value="Xls" />
						<label for="XLS" style="font-weight:normal">XLS</label>
						&nbsp;
						<input type="radio" id="XLSX" name="SaveOption" value="Xlsx" checked="checked" />
						<label for="XLSX" style="font-weight:normal">XLSX</label>
					</div>
                  </div>
                <br />
                <div class="celldiv">
                    <input id="input"  class="e-btn" type="submit" name="button" value="Input Template" style="width:162px;" />
                    <input id="import"  class="e-btn" type="submit" name="button" value="Import From Excel" style="width:162px;" />
                    <input id="export"  class="e-btn" @ViewData["exportButtonState"] type="submit" name="button" value="Export To Excel" style="width:162px;" />
                </div>
            </div>

        </div>
        <script type="text/javascript">

            function EnableExport() {
                document.getElementById('export').prop("disabled", false);

            }
        </script>
    Html.EndForm();
    }
        }
    </div>
}
@section Title{
                    <title>ASP.NET MVC Excel (XlsIO) library - Collection Objects Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Collection Objects in ASP.NET MVC Excel (XlsIO) Library</h1>
                }