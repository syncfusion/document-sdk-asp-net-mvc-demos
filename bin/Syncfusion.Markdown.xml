<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.Markdown</name>
    </assembly>
    <members>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.None">
            <summary> 
            None. This is default style. 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading1">
             <summary>
            Heading 1
             </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading2">
            <summary>
            Heading 2
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading3">
             <summary> 
            Heading 3
             </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading4">
             <summary>
            Heading 4
             </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading5">
            <summary> 
            Heading 5 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.Heading6">
            <summary> 
            Heading 6 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdParagraphStyle.BlockQuote">
            <summary>
            Block quote 
            </summary> 
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdSubSuperScript">
            <summary>
            Specifies type of the sub and super script.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdSubSuperScript.None">
            <summary>
            No subscript or superscript.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdSubSuperScript.SuperScript">
            <summary>
            Specifies superscript format.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdSubSuperScript.SubScript">
            <summary>
            Specifies subscript format.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdColumnAlignment">
            <summary> 
            Specifies type of alignment for table column. 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdColumnAlignment.Left">
            <summary> 
            Left alignment 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdColumnAlignment.Right">
            <summary> 
            Right alignment 
            </summary> 
        </member>
        <member name="F:Syncfusion.Office.Markdown.MdColumnAlignment.Center">
            <summary> 
            Center alignment. 
            </summary> 
        </member>
        <member name="T:Syncfusion.Office.Markdown.IMdBlock">
            <summary>
            Represents an interface for Block in Markdown 
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.IMdInline">
            <summary>
            Represents an interface for inlline in Markdown.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MarkdownDocument">
            <summary>
            Represents a class to maintain Markdown document.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MarkdownDocument.Blocks">
            <summary>
            Gets or sets list of blocks in Markdown 
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.AddParagraph">
            <summary>
            Adds the <see cref="T:Syncfusion.Office.Markdown.MdParagraph"/> to the Markdown.
            </summary>
            <returns>The reference to the newly created paragraph.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.AddThematicBreak">
            <summary>
            Adds the <see cref="T:Syncfusion.Office.Markdown.MdThematicBreak"/> to the Markdown.
            </summary>
            <returns>The reference to the newly created thematicbreak.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.AddCodeBlock">
            <summary>
            Adds the <see cref="T:Syncfusion.Office.Markdown.MdCodeBlock"/> to the Markdown.
            </summary>
            <returns>Returns new MdCodeBlock.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.AddTable">
            <summary>
            Adds the <see cref="T:Syncfusion.Office.Markdown.MdTable"/> to the Markdown.
            </summary>
            /// <returns>The reference to the newly created table.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.GetMarkdownText">
            <summary>
            Gets markdown content as text.
            </summary>
            <returns>A string containing the serialized Markdown content.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Syncfusion.Office.Markdown.MarkdownDocument"/> class.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.#ctor(System.IO.Stream,Syncfusion.Office.Markdown.MdImportSettings)">
            <summary>
            Initializes new instance for <see cref="T:Syncfusion.Office.Markdown.MarkdownDocument"/> class.
            </summary>
            <param name="stream">Stream containing Markdown data.</param>
            <param name="mdImportSettings">Settings used for importing Markdown.</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.OpenInternal(System.IO.Stream,Syncfusion.Office.Markdown.MdImportSettings)">
            <summary>
            Parses a Markdown document from stream using the given settings.
            </summary>
            <param name="stream">Stream containing Markdown content.</param>
            <param name="mdImportSettings">Import settings for parsing.</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.Open(System.IO.Stream,Syncfusion.Office.Markdown.MdImportSettings)">
            <summary>
            Parses a Markdown document from stream using the given settings.
            </summary>
            <param name="stream">Stream containing Markdown content.</param>
            <param name="mdImportSettings">Import settings for parsing.</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownDocument.Dispose">
            <summary>
            Disposes the document.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MarkdownSerializer">
            <summary>
            Converts word document Markdown.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownSerializer.CrLf">
            <summary>
            Carriage return followed by line feed character: "\x000d\x000a" or "\r\n". 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownSerializer.SpaceChar">
            <summary>
            Space character
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownSerializer.WriteTable(Syncfusion.Office.Markdown.MdTable,System.String,System.String)">
            <summary>
            Iterates through MarkdownTable and writes the contents of table. 
            </summary>
            <returns>The contents of table</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownSerializer.IterateInlineItems(System.Collections.Generic.List{Syncfusion.Office.Markdown.IMdInline},System.String)">
            <summary>
            Returns Inline Items.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownSerializer.ValidateDelimiters(System.String@,System.String@,System.String@,Syncfusion.Office.Markdown.MdTextRange)">
            <summary>
            Validate the opening and closing delimiters along with symbols
            </summary>
            <param name="m_text">Paragraph text</param>
            <param name="emptySpace">Space to be add after delimiter</param>
            <param name="text">Current textrange text</param>
            <param name="nextSibiling">Next sibiling of current textrange</param>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTextFormat">
            <summary>
            Represents a class to maintain text format of markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextFormat.Bold">
            <summary>
            Gets or sets a value indicating whether text is bold or not. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextFormat.Italic">
            <summary>
            Gets or sets a value indicating whether text is italic or not.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextFormat.CodeSpan">
            <summary>
            Gets or sets a value indicating whether text is code spanned text. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextFormat.StrikeThrough">
            <summary>
            Gets or sets a value indicating whether text is formatted with strikethrough. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextFormat.IsHidden">
            <summary>
            Gets or sets a value indicating whether text is Hidden or not. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextFormat.SubSuperScriptType">
            <summary>
            Gets or sets the subscript or superscript for the text.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdTextFormat.Clone">
            <summary>
            Clone the instance
            </summary>
            <returns></returns>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MarkdownConstants">
            <summary>
            Represents the markdown syntax characters.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.HorizonalRuleSyntax">
            <summary>
            Represents horizontal rule syntax.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.IndentedCodeBlock">
            <summary>
            Represents the syntax of indent code block in Markdown
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.FencedCodeBlock1">
            <summary>
            Represents the syntax of fenced code block in Markdown
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.FencedCodeBlock2">
            <summary>
            Represents the another syntax of fenced code block in Markdown as tilde character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.TablePipeChar">
             <summary>
            Represents the syntax of table which start and end with this char in Markdown
             </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.TableHyphenChar">
            <summary>
            Represents the syntax of hyphen which seprate table cell in Markdown
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.CommentStartSyntax">
             <summary>
            Represents the start comment element in the markdown
             </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.CommentEndSyntax">
             <summary>
            Represents the HTML end comment element in the markdown.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.BoldDelimiter">
            <summary>
            Bold syntax in Markdown.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.ItalicDelimiter">
            <summary>
            Italic syntax in markdown.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.CodeSpanDelimiter">
            <summary>
            Code span syntax in markdown
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.StrikethroughDelimiter">
            <summary>
            Strikeout syntax in markdown
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.SuperScriptOpenTag">
            <summary>
            Superscript open tag
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.SubScriptOpenTag">
            <summary>
            Subscript open tag
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.SuperScriptCloseTag">
            <summary>
            Superscript close tag
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.SubScriptCloseTag">
            <summary>
            Subscript close tag
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.CheckedTaskMarker">
            <summary>
            Represents checked task item syntax.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownConstants.UncheckedTaskMarker">
            <summary>
            Represents unchecked task item syntax.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.ControlCharacters">
            <summary>
            Represents the control characters contants.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.CarriegeReturn">
            <summary>
            Carriage return character: "\x000d" or "\r". Same as ParagraphBreak. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.CrLf">
            <summary>
            Carriage return followed by line feed character: "\x000d\x000a" or "\r\n". 
            Not used as such in Microsoft Word documents, but commonly used in text files for 
            paragraph breaks. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.LineFeed">
            <summary>
            Line feed string: "\x000a" or "\n". Same as Line feed. 
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.SpaceChar">
            <summary>
            Space character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.BacktickChar">
            <summary>
            Backtick character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.TildeChar">
            <summary>
            Tilde character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.HashChar">
            <summary>
            Hash character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.MinusChar">
            <summary>
            Minus character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.PlusChar">
            <summary>
            Plus character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.StarChar">
            <summary>
            Star character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.PeriodChar">
            <summary>
            Period character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.OpenSquareBracket">
            <summary>
            Open square bracket character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.CloseSquareBracket">
            <summary>
            Close square bracket character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.OpenParenthesis">
            <summary>
            Open parenthesis character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.CloseParenthesis">
            <summary>
            Close parenthesis character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.DoubleQuote">
            <summary>
            Double quote character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.Comma">
            <summary>
            Comma character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.Exclamatory">
            <summary>
            Exclamatory character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.BackSlash">
            <summary>
            Exclamatory character
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.ControlCharacters.LesserThanSign">
            <summary>
            Lesser than character
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MarkdownParser">
            <summary>
            Represents a class to parse Markdown document.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MarkdownParser.HasNextLine">
            <summary>
            Indicates whether the next line is exist or not in the markdown file.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MarkdownParser.PreviousLine">
            <summary>
            Gets or sets the previous line
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MarkdownParser.PreviousBlockItem">
            <summary>
            Gets or sets the previous line
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MarkdownParser.CurrentFormat">
            <summary>
            Gets the current format
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ParseMd(System.IO.StreamReader,Syncfusion.Office.Markdown.MdImportSettings)">
            <summary>
            Parse the Markdown stream and create Markdown DOM.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsHyperlinkOrImage(System.String,System.String@,System.String@,System.String@,System.Int32@)">
            <summary>
            Validate the current line has proper hyperlink syntax.
            </summary>
            <param name="line">Current line</param>
            <param name="displayText">Display text of hyperlink or alttext of image.</param>
            <param name="urlText">Url of hyperlink or source path of image.</param>
            <param name="screenTip">Screentip of hyperlink</param>
            <param name="endIndex">Index at end of bracket</param>
            <returns>True, if it satisfies image or hyperlink syntax, else false.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.GetContentWithinBracket(System.String,System.Int32,System.Int32@,System.Char,System.Char,System.String@)">
            <summary>
            Validate whether having balancing open and close character and get the content within them.
            </summary>
            <param name="text">Text to check</param>
            <param name="startIndex">Start index of opening character.</param>
            <param name="endIndex">End index of closing character</param>
            <param name="openingChar">Opening character</param>
            <param name="closingChar">Closing character</param>
            <param name="textWithinBracket">Text within the opening and closing character</param>
            <returns>Returns true, once balancing character reached. And also stop the traversing once balancing found.</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsFencedCodeBlock">
             <summary>
             Check whether the line is start with fenced code block.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ReadLine">
            <summary>
            Read the line from the textlines.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ResetPostionToPrevLine">
            <summary>
            Reset the current line to previous line and also update the previous line, index.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ParseIndentedCodeBlock">
            <summary>
            Parse indented code block.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ParseFencedCodeBlock">
            <summary>
            Parse fenced code block.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ParseTable(System.String,Syncfusion.Office.Markdown.MdTable)">
            <summary>
            Parse table cell.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.MoveItemstoCells(Syncfusion.Office.Markdown.MdParagraph,Syncfusion.Office.Markdown.MdTableCell,System.Boolean)">
            <summary>
            Move parsed inline items from paragraph to cell and set bold for first row
            </summary>
            <param name="mdParagraph">Source paragraph</param>
            <param name="mdTableCell">Destination table cell</param>
            <param name="isHeaderRow">Whether it is first row column</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsTable(System.String,Syncfusion.Office.Markdown.MdTable@)">
            <summary>
            Check whether the current line is a table or not.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.HasTableSyntax(System.String)">
            <summary>
            Check whether the current line contains table syntax.
            </summary>
            <param name="line"></param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ParseParagraph">
            <summary>
            Parse paragraph.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ProcessLine(System.String,Syncfusion.Office.Markdown.MdParagraph)">
            <summary>
            Process line in first stage
            </summary>
            <param name="currentLine"></param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.CloseScript(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Text.StringBuilder@,System.Int32@,System.Char,System.Int32,System.String,System.String)">
            <summary>
            Close the SuperScript and Subscript delimiter
            </summary>
            <param name="splittedText">List of text and textformats</param>
            <param name="currentText">Current Text</param>
            <param name="currentPos">Current Position Index</param>
            <param name="currCharacter">Current Character</param>
            <param name="endIndex">End index</param>
            <param name="openDelimiter">Open delimiter</param>
            <param name="closeDelimiter">Close Delimiter</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ProcessLinkOrImageSyntax(System.Int32@,System.String,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Text.StringBuilder@,System.Char,System.Boolean)">
            <summary>
            Procee hyperlink or image syntax
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.AddHyperlinkSyntax(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String,System.String)">
            <summary>
            Create syntax of hyperlink and add in keyvaluepair collection for 2nd stage of processing.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.AddImageSyntax(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.String,System.String)">
            <summary>
            Create syntax of image and add in keyvaluepair collection for 2nd stage of processing.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.HasBasicHyperlinkOrImageSyntax(System.String,System.Int32)">
            <summary>
            Check whether the given text satisfies basic syntax of hyperlink or image
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.AddAsLiteralText(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Text.StringBuilder@)">
            <summary>
            Add the given text as literal text value and reset the text to parse next text.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.CloseDelimiter(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Int32,System.String,System.String)">
            <summary>
            Add the delimiter as closing tag in KeyValuePair and convert invalid openers as literal text
            </summary>
            <param name="splittedText">Collection to add close tag.</param>
            <param name="delimiterOpenIndex">Index of opener in the list.</param>
            <param name="openDelimiter">Delimiter syntax</param>
            <param name="closeDelimiter">Delimiter to add as close</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.RemoveAndInsertKeyPair(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},System.Int32,System.String,System.String)">
            <summary>
            Remove the item at given index and add new item using given key and value
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsDelimterOpener(System.Collections.Generic.KeyValuePair{System.String,System.String})">
            <summary>
            Check the given keyvalue pair is opener of any supported delimiters
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.GetImage(System.String)">
            <summary>
            Gets the image using the given string.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsComment">
            <summary>
            Check current line is comment
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.GetListValue(Syncfusion.Office.Markdown.MdListFormat)">
            <summary>
            Get list value
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsListParagraph(System.String,System.String@,System.Boolean@,System.Boolean)">
            <summary>
            Check whether the current line is list or not
            </summary>
            <param name="line"></param>
            <param name="currListValue"></param>
            <param name="isNumberedList"></param>
            <param name="checkConditionOnly">True if need to check curent line is list or not. False, if need to check current line is list or not and also get the list values</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.CheckCurrLineIsIndentedForList">
            <summary>
            Check whether the current line is indented for the nested list or not.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsNeedToConsiderIndent">
            <summary>
            Check whether the content inside the list needs to be considered as para with indent or code block
            </summary>
            <returns>true, if need to be considered as code block</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.RemoveListLevels(System.Int32,System.Boolean)">
            <summary>
            Removes the list levels
            </summary>
            <param name="prevListBeforeSpace">previous list before space length</param>
            <param name="isNumberedList">Number or bulleted list</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.GetContinuousNumber(System.String)">
            <summary>
            Get the continuous number characters from the beginning of given string.
            </summary>
            <param name="line"></param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsIndentedCodeBlock">
            <summary>
            Check whether the current line is indent code block start line.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsFencedCodeEnd(System.String,System.Char)">
            <summary>
            Check whether the fenced code end occur.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.GetContinuousChar(System.String,System.Char)">
            <summary>
            Get the continues given character in a string.
            </summary> 
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.SplitStringByCharacter(System.String,System.Char)">
            <summary>
            Split the line with given character, but not followed by "\"
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ConvertTextToInlineItems(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.String}},Syncfusion.Office.Markdown.MdParagraph)">
            <summary>
            Convert the colletion of syntax to inline items.
            </summary>
            <param name="collection">List holding the collection of items and style.</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.AddMdTextRange(Syncfusion.Office.Markdown.MdParagraph,System.String)">
            <summary>
            Add MdTextRange in paragraph with format.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ApplyCurrentFormat(Syncfusion.Office.Markdown.MdTextFormat)">
            <summary>
            Apply current format to the given text textrange
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ApplyNewStyleInStack(System.String)">
            <summary>
            Push the new style
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.ReplaceSymbols(System.String)">
            <summary>
            Replace the symbols followed with a backslash
            </summary>
            <param name="text">Current text</param>
            <returns>Return the text after removing the backslash</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.IsThematicBreak">
            <summary>
            Check the current line is thematic break item or not.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownParser.Close">
            <summary>
            Closes this instance.
            </summary> 
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Office.Markdown.MdImportSettings" -->
        <member name="P:Syncfusion.Office.Markdown.MdImportSettings.IsEventSubscribed">
            <summary>
            Represents whether image node event is subscribed.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "E:Syncfusion.Office.Markdown.MdImportSettings.ImageNodeVisited" -->
        <member name="M:Syncfusion.Office.Markdown.MdImportSettings.ExecuteImageNodeVisitedEvent(System.IO.Stream,System.String)">
            <summary>
            Execute the image node visited event.
            </summary>
            <param name="imageStream"></param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Office.Markdown.MdImageNodeVisitedEventHandler" -->
        <!-- Badly formed XML comment ignored for member "T:Syncfusion.Office.Markdown.MdImageNodeVisitedEventArgs" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Office.Markdown.MdImageNodeVisitedEventArgs.ImageStream" -->
        <!-- Badly formed XML comment ignored for member "P:Syncfusion.Office.Markdown.MdImageNodeVisitedEventArgs.Uri" -->
        <member name="T:Syncfusion.Office.Markdown.MdCodeBlock">
            <summary>
            Represents a code block in Markdown. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdCodeBlock.Lines">
            <summary>
            Gets or sets lines of code in code block.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdCodeBlock.IsFencedCode">
            <summary>
            Gets or sets a value indicating whether lines of code are indented or fenced code. Default it is true.  
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdCodeBlock.Language">
            <summary>
            Gets or sets the language of the code block (e.g., "csharp", "javascript", "html").
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdCodeBlock.Close">
            <summary>
            Closes the code block.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdHyperlink">
            <summary>
            Represents a hyperlink in Markdown. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdHyperlink.TextFormat">
            <summary>
            Gets or sets the MdTextFormat
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdHyperlink.Url">
            <summary>
            Gets or sets hyperlink
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdHyperlink.DisplayText">
            <summary>
            Gets or sets display text of hyperlink 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdHyperlink.ScreenTip">
            <summary>
            Gets or sets screen tip of hyperlink 
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdListFormat">
            <summary>
            Represents list format for a line in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.IsNumbered">
            <summary>
            Gets or sets a value indicating whether line is numbered. Default it is false. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.BulletedListMarker">
            <summary>
            Gets a value used for bulleted list marker in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.NumberedListMarker">
            <summary>
            Gets a value used for Numbered List Marker in Markdown 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.ListValue">
            <summary>
            Gets or sets a value used for representing the list including the nested list in Markdown
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdListFormat.ListLevel">
            <summary>
            Gets or sets a value used for representing the list level in Markdown
            </summary>
            <remarks>List level must be less than equal to 8 and greater then equal to 0(0-8)</remarks>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdParagraph">
            <summary>
            Represents a line in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.Inlines">
            <summary>
            Gets or sets list of inline items for a line. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.StyleName">
            <summary>
            Gets or sets style for a line.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.ListFormat">
            <summary>
            Gets or sets list format for a line. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.TaskItemProperties">
            <summary>
            Gets or sets the task item properties of a line. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.IsHorizontalRule">
            <summary>
            Gets or sets a value indicating horizontal rule in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.HasBlockquote">
            <summary>
            Gets or sets a value indicating Blockquote in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.LeftIndent">
            <summary>
            Gets or sets left indent value for paragraph
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdParagraph.FirstLineIndent">
            <summary>
            Gets or sets first line indent value for paragraph
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.AddTextRange">
            <summary>
            Defines methods to add MdTextRange to Inlines in the markdown document.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.AddHyperlink">
            <summary>
            Defines methods to add MdHyperlink to Inlines in the markdown document.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.AddPicture">
            <summary>
            Defines methods to add MdPicture to Inlines in the markdown document.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.ApplyParagraphStyle(System.String)">
            <summary>
            Applies Paragraph style to MdParagraph.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.GetCharForParaStyle(Syncfusion.Office.Markdown.MdParagraph,System.String)">
            <summary>
            Returns the character for Paragraph style.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdParagraph.Close">
            <summary>
            Closes the paragraph.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdPicture">
            <summary>
            Represents an image in a Markdown. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdPicture.AltText">
            <summary>
            Gets or sets alternate text for an image. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdPicture.ImageBytes">
            <summary>
            Gets or sets image bytes 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdPicture.ImageFormat">
            <summary>
            Gets or sets the image format
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdPicture.Url">
            <summary>
            Gets or sets the image url
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdPicture.Close">
            <summary>
            Closes the picture.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTable">
            <summary>
            Represents a table in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTable.Rows">
            <summary>
            Get or sets the rows in table. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTable.ColumnAlignments">
            <summary>
            Gets or sets the alignments for each columns in table.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdTable.AddTableRow">
            <summary>
            Adds table row to rows collection.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTableCell">
            <summary>
            Represents a table cell in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTableCell.Items">
            <summary>
            Gets or sets the collection of inline items to be preserved in cell.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTableRow">
            <summary>
            Represents a table row in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTableRow.Cells">
            <summary>
            Gets or sets the collection of cells for the particular row.
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MdTableRow.AddTableCell">
            <summary>
            Adds table cell to cells collection for the particular row.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTaskProperties">
            <summary>
            Represents the properties for task item in Markdown. This property applies if a paragraph starts with checkbox.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTaskProperties.IsChecked">
            <summary>
            Gets or sets a value indicating whether task item is checked. Default is false. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTaskProperties.CheckedMarker">
            <summary>
            Gets or sets a string used for checked task item marker in Markdown 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTaskProperties.Uncheckedmarker">
            <summary>
            Gets or sets a string used for unchecked task item marker in Markdown 
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdTextRange">
            <summary>
            Represents a text with formatting in Markdown 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.TextFormat">
            <summary>
            Gets or sets the MdTextFormat
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.Text">
            <summary>
            Gets or sets a text in a line. 
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdTextRange.IsLineBreak">
            <summary>
            Gets or sets a value indicating LineBreak. 
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MdThematicBreak">
            <summary>
            Represents a thematic break or horizontal rule in Markdown.
            </summary>
        </member>
        <member name="P:Syncfusion.Office.Markdown.MdThematicBreak.HorizontalRuleChar">
            <summary>
            Gets a string which is used to add horizontal rule in Markdown.
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.MarkdownToHtmlConverter">
            <summary>
            Converts MarkdownDocument to HTML content.
            </summary>
        </member>
        <member name="F:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.NewLine">
            <summary>
            Carriage return followed by line feed character: "\x000d\x000a" or "\r\n". 
            </summary>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.ToHtml(System.String)">
            <summary>
            Converts Markdown content to HTML string
            </summary>
            <param name="mdContent">The markdown document to convert</param>
            <returns>HTML content as string</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.ConvertToHtml(Syncfusion.Office.Markdown.MarkdownDocument)">
            <summary>
            Converts MarkdownDocument to HTML string
            </summary>
            <param name="markdownDoc">The markdown document to convert</param>
            <returns>HTML content as string</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.ConvertBlockToHtml(Syncfusion.Office.Markdown.IMdBlock,Syncfusion.Office.Markdown.IMdBlock,Syncfusion.Office.Markdown.ListState@)">
            <summary>
            Converts a markdown block to HTML
            </summary>
            <param name="block">The markdown block to convert</param>
            <param name="nextBlock">The next block for context</param>
            <param name="listState">Current list state for proper nesting</param>
            <returns>HTML representation of the block</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.ConvertParagraphToHtml(Syncfusion.Office.Markdown.MdParagraph,Syncfusion.Office.Markdown.IMdBlock,Syncfusion.Office.Markdown.ListState@)">
            <summary>
            Converts MdParagraph to HTML
            </summary>
            <param name="paragraph">The paragraph to convert</param>
            <param name="nextBlock">The next block for context</param>
            <param name="listState">Current list state for proper nesting</param>
            <returns>HTML representation of the paragraph</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.HandleListItem(Syncfusion.Office.Markdown.MdParagraph,System.String,Syncfusion.Office.Markdown.IMdBlock,Syncfusion.Office.Markdown.ListState@)">
            <summary>
            Handles list item conversion with proper nesting
            </summary>
            <param name="paragraph">The paragraph with list format</param>
            <param name="content">The content of the paragraph</param>
            <param name="nextBlock">The next block for context</param>
            <param name="listState">Current list state</param>
            <returns>HTML for the list item</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.CloseAllLists(System.Text.StringBuilder,Syncfusion.Office.Markdown.ListState)">
            <summary>
            Closes all open lists
            </summary>
            <param name="htmlBuilder">StringBuilder to append to</param>
            <param name="listState">Current list state</param>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.ConvertInlinesToHtml(System.Collections.Generic.List{Syncfusion.Office.Markdown.IMdInline})">
            <summary>
            Converts inline elements to HTML
            </summary>
            <param name="inlines">Collection of inline elements</param>
            <returns>HTML representation of inline elements</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.ConvertTableToHtml(Syncfusion.Office.Markdown.MdTable)">
            <summary>
            Converts MdTable to HTML
            </summary>
            <param name="table">The table to convert</param>
            <returns>HTML representation of the table</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.GetAlignmentStyle(System.Collections.Generic.List{Syncfusion.Office.Markdown.MdColumnAlignment},System.Int32)">
            <summary>
            Gets alignment style for table cells
            </summary>
            <param name="alignments">Column alignments</param>
            <param name="columnIndex">Column index</param>
            <returns>Style attribute for alignment</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.ConvertCodeBlockToHtml(Syncfusion.Office.Markdown.MdCodeBlock)">
            <summary>
            Converts MdCodeBlock to HTML
            </summary>
            <param name="codeBlock">The code block to convert</param>
            <returns>HTML representation of the code block</returns>
        </member>
        <member name="M:Syncfusion.Office.Markdown.MarkdownToHtmlConverter.EscapeHtml(System.String)">
            <summary>
            Escapes HTML special characters
            </summary>
            <param name="text">Text to escape</param>
            <returns>HTML-escaped text</returns>
        </member>
        <member name="T:Syncfusion.Office.Markdown.ListState">
            <summary>
            Helper class to track list state for proper nesting
            </summary>
        </member>
        <member name="T:Syncfusion.Office.Markdown.ListLevelInfo">
            <summary>
            Information about a list level
            </summary>
        </member>
    </members>
</doc>
